1.
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <androidx.recyclerview.widget.RecyclerView
        android:id="@+id/recyclerView"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <Button
        android:id="@+id/btn_id"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Add"
        android:backgroundTint="@color/addGreen"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.9"/>

</androidx.constraintlayout.widget.ConstraintLayout>

2.
class TaskModel {
    var id:Int=0
    var name:String =""
    var details:String = ""
}

3.
package com.example.sqlitedb.Database

import android.content.ContentValues
import android.content.Context
import android.database.Cursor
import android.database.sqlite.SQLiteDatabase
import android.database.sqlite.SQLiteOpenHelper
import com.example.sqlitedb.Model.TaskModel

class DatabaseHelper(context: Context) : SQLiteOpenHelper(context, db_name, null, db_version) {

    companion object {
        private val db_name = "task"
        private val db_version = 1
        private val tb_name = "tasklist"
        private val ID = "id"
        private val task_name = "taskName"
        private val task_details = "taskDetails"
    }
    override fun onCreate(db: SQLiteDatabase?) {
        val createTable =
            "CREATE TABLE $tb_name ($ID INTEGER PRIMARY KEY,$task_name TEXT, $task_details TEXT);"
        db?.execSQL(createTable)
    }

    override fun onUpgrade(db: SQLiteDatabase?, oldVersion: Int, newVersion: Int) {
        val drop_table = "DROP TABLE IF EXISTS $tb_name"
        db?.execSQL(drop_table)
        onCreate(db)
    }


    fun addTask(tasks:TaskModel):Boolean{
        val db = this.writableDatabase
        val values = ContentValues()
        values.put(task_name, tasks.name)
        values.put(task_details,tasks.details)
        val success = db.insert(tb_name,null,values)
        db.close()
        return (Integer.parseInt("$success")!=-1)
    }
}

4.
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".AddUser">

    <EditText
        android:id="@+id/name_id"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginHorizontal="50dp"
        android:hint="Enter name"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.2"/>
    <EditText
        android:id="@+id/details_id"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginHorizontal="50dp"
        android:hint="Enter details"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.3"/>
    <Button
        android:id="@+id/save_btn"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginHorizontal="50dp"
        android:text="Save"
        android:backgroundTint="@color/addGreen"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.5"/>
    <Button
        android:id="@+id/delete_btn"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginHorizontal="50dp"
        android:text="Delete"
        android:backgroundTint="@color/addGreen"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.6"/>

</androidx.constraintlayout.widget.ConstraintLayout>

5.
package com.example.sqlitedb

import android.content.Intent
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.Button
import android.widget.EditText
import android.widget.Toast
import com.example.sqlitedb.Database.DatabaseHelper
import com.example.sqlitedb.Model.TaskModel

class AddUser : AppCompatActivity() {

    lateinit var save:Button
    lateinit var delete : Button
    lateinit var nameEdit:EditText
    lateinit var detailsEdit : EditText
    var dbHandler : DatabaseHelper?= null
    var isEditMode:Boolean = false
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_add_user)

        save = findViewById(R.id.save_btn)
        delete = findViewById(R.id.delete_btn)
        nameEdit = findViewById(R.id.name_id)
        detailsEdit = findViewById(R.id.details_id)

        dbHandler = DatabaseHelper(this)

        save.setOnClickListener {
            var success:Boolean = false
            var task:TaskModel  = TaskModel()
            task.name = nameEdit.text.toString()
            task.details = detailsEdit.text.toString()

            success = dbHandler?.addTask(task) as Boolean
            if(success){
                val i = Intent(applicationContext,MainActivity::class.java)
                startActivity(i)
                finish()
            }
            else{
                Toast.makeText(this@AddUser,"Error",Toast.LENGTH_SHORT).show()
            }
        }
    }
}